#!/usr/bin/python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-2.0-only
#

# Manage templates

import sys
import json
from euci import EUci
from nethsec import utils, firewall

def list_templates():
    u = EUci()
    templates = u.get_all('templates')
    return {"templates": templates}

def add_ipv6_rules():
    u = EUci()
    ret = list()
    rules = ['ip6_dhcp', 'ip6_mld', 'ip6_icmp', 'ip6_icmp_forward']
    for r in rules:
        ret.append(firewall.add_template_rule(u, r, '', ''))
    return {"rules": ret}

def is_ipv6_enabled():
    u = EUci()
    return {"enabled": firewall.is_ipv6_enabled(u)}

def disable_ipv6_firewall():
    u = EUci()
    return {"sections": firewall.disable_ipv6_firewall(u)}

def disable_linked_rules(link):
    u = EUci()
    return {"rules": firewall.disable_linked_rules(u, link)}

def delete_linked_sections(link):
    u = EUci()
    return {"sections": firewall.delete_linked_sections(u, link)}

def add_guest_zone(network):
    u = EUci()
    z, f = firewall.add_template_zone(u, 'ns_guest', networks=[network])
    return {"zone": z, "forwardings": f}

cmd = sys.argv[1]

if cmd == 'list':
    print(json.dumps({
        "list": {},
        "add-ipv6-rules": {},
        "is-ipv6-enabled": {},
        'disable-ipv6-firewall': {},
        'disable-linked-rules': {"link": "openvpn/ns_roadwarrior"},
        'delete-linked-sections': {"link": "openvpn/server1"},
        "add-guest-zone": {"network": "guest1"},
        }))
elif cmd == 'call':
    action = sys.argv[2]
    if action == "list":
        ret = list_templates()
    elif action == "add-ipv6-rules":
        ret = add_ipv6_rules()
    elif action == "is-ipv6-enabled":
        ret = is_ipv6_enabled()
    elif action == "disable-ipv6-firewall":
        ret = disable_ipv6_firewall()
    elif action == "disable-linked-rules":
        args = json.loads(sys.stdin.read())
        ret = disable_linked_rules(args['link'])
    elif action == "delete-linked-sections":
        args = json.loads(sys.stdin.read())
        ret = delete_linked_sections(args['link'])
    elif action == "add-guest-zone":
        args = json.loads(sys.stdin.read())
        ret = add_guest_zone(args['network'])

    print(json.dumps(ret))
