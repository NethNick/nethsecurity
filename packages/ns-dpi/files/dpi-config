#!/usr/bin/python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-2.0-only
#

from euci import EUci
import json
import subprocess

def get_interface_ips(interface):
    ret = list()
    try:
        proc = subprocess.run(['/sbin/ifstatus', section], check=True, capture_output=True)
        info = json.loads(proc.stdout)
    except:
        return ret

    for ip_type in ('ipv4-address', 'ipv6-address'):
        if ip_type in info:
            for addr in info[ip_type]:
                if 'address' in addr:
                    ret.append(addr['address'])

    return ret

cfg_file = "/etc/netify.d/netify-flow-actions.json"
config = {
    "version": 1,
    "targets": {},
    "target_defaults": {},
    "target_globals": {
        "ctlabel": {
            "max_bits": 127,
            "connlabel_conf": "/etc/xtables/connlabel.conf"
            }
        },
    "actions": {},
    "exemptions": []
}

# Add firewall IP address as global exemptions
u = EUci()
if u.get('dpi', 'config', 'firewall_exemption', default=0) == '1':
    for section in u.get_all('network'):
        if u.get('network', section) == 'interface':
            ip_addrs = get_interface_ips(section)
            if ip_addrs:
                config["exemptions"] = config["exemptions"] + ip_addrs

rcount = 0
valid_actions = ['block', 'bulk', 'best_effort', 'video', 'voice']
for section in u.get_all('dpi'):
    if u.get('dpi', section) != 'rule':
        continue
    rule = u.get_all('dpi', section)
    if rule['action'] not in valid_actions or not rule['enabled']:
        continue
    config["actions"][f"rule{rcount}"] = {
        "enabled": rule['criteria'] == '1',
        "interface": "*",
        "criteria": rule['criteria'].replace('"',"'"),
        "targets": [rule['action']]
    }
    config["targets"][rule['action']] = {
        "target_type": "ctlabel",
        "labels": [rule['action']]
    }
    rcount = rcount + 1

with open(cfg_file, 'w') as fp:
    json.dump(config, fp)
