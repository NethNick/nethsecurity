#!/usr/bin/python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-2.0-only
#

import os
import pwd
import grp
import os.path
import nsmigration
from nextsec import firewall, utils

def save_cert(path, data):
    # setup rw permissions on ly for nobody user
    os.umask(0o077)
    with open(path, 'w') as f:
        f.write(data)
    
    uid = pwd.getpwnam("nobody").pw_uid
    gid = grp.getgrnam("nogroup").gr_gid
    os.chown(path, uid, gid)


iname="roadwarrior"
cert_dir=f"/etc/openvpn/{iname}/certs"
os.makedirs(cert_dir, exist_ok=True)

(u, data) = nsmigration.init("openvpn.json")

# Setup global option
u.set("openvpn", iname, "openvpn")
for option in data['rw']['options']:
    nsmigration.vprint(f"Setting OpenVPN roadwarrior option {option}")
    u.set("openvpn", iname, option, data['rw']['options'][option])

# Setup server certificates
for cert in data['rw']['ca']:
    save_cert(os.path.join(cert_dir, cert), data['rw']['ca'][cert])
u.set("openvpn", iname, 'dh', os.path.join(cert_dir, 'dh.pem'))
u.set("openvpn", iname, 'ca', os.path.join(cert_dir, 'ca.crt'))
u.set("openvpn", iname, 'cert', os.path.join(cert_dir, 'srv.crt'))
u.set("openvpn", iname, 'key', os.path.join(cert_dir, 'srv.key'))
u.set("openvpn", iname, 'crl-verify', os.path.join(cert_dir, 'crl.pem'))

u.set("openvpn", iname, 'client_connect', f'"/usr/libexec/ns-openvpn/openvpn-connect {iname}"')
u.set("openvpn", iname, 'client_disconnect', f'"/usr/libexec/ns-openvpn/openvpn-disconnect {iname}"')

# Create user entries
for user in data["users"]:
    sname = utils.sanitize(user["name"])
    nsmigration.vprint(f"Creating OpenVPN roadwarrior user {sname}")
    u.set("openvpn", sname, "user")
    u.set("openvpn", sname, "instance", iname)
    u.set("openvpn", sname, "ipaddr", user["ipaddr"])
    u.set("openvpn", sname, "enabled", user["enabled"])
    save_cert(os.path.join(cert_dir, f'{sname}.key'), user['key'])
    save_cert(os.path.join(cert_dir, f'{sname}.crt'), user['crt'])

# Add interface to LAN
firewall.add_to_lan(u, data['rw']['options']['dev'])
# Open OpenVPN port
firewall.add_service(u, 'openvpn_rw', data['rw']['options']['port'], data['rw']['options']['proto'])

# Save configuration
u.commit("openvpn")
firewall.apply(u)
