#!/usr/bin/python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-2.0-only
#

# Used env variables:
# - username
# - password
# - config

import re
import os
import sys
import subprocess
from euci import EUci
from nethsec import users

username = os.environ.get("username")
password = os.environ.get("password")
config_path = os.environ.get("config")

instance = re.sub(r'^openvpn-|\.conf$', '', config_path)

ldap = {}
uci = EUci()
try:
    db = uci.get("openvpn", instance, "ns_user_db")
    ldap = uci.get_all("users", db)
except:
    # user db not set or not found
    sys.exit(5)

user = users.get_user_by_name(uci, username, db)
if user is None:
    # user not found
    sys.exit(4)

if not "openvpn_enabled" in user or user["openvpn_enabled"] != "1":
    # user not enabled
    sys.exit(3)

uri = ldap.get("uri", "")
base_dn = ldap.get("base_dn", "")
# default for user_dn is the base_dn
user_dn = ldap.get("user_dn", base_dn)
user_attr = ldap.get("user_attr", "uid")
tls_reqcert = ldap.get("tls_reqcert", "never")
starttls = int(ldap.get("starttls", 0))

if not uri or not base_dn:
    # no info to connect ldap db
    sys.exit(2)

ldapsearch_command = [
    "/usr/bin/ldapsearch",
    "-H", uri,
    "-b", base_dn,
    "-D", f"{user_attr}={username},{user_dn}",
    "-w", password,
    f"{user_attr}={username}"
]
if ldap.get("starttls", '1') == 1:
    ldapsearch_command.append("-Z")

env = os.environ.copy()
env['LDAPTLS_REQCERT'] = tls_reqcert

try:
    subprocess.run(ldapsearch_command, env=env, check=True, capture_output=True)
    sys.exit(0)
except Exception as e:
    print(e, file=sys.stderr)
    sys.exit(1)
