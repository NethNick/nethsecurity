#!/bin/sh

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-2.0-only
#

#
# Register the machine
#

function exit_error {
    >&2 echo "[ERROR] $@"
    exit 1
}

function help {
    >&2 echo "Usage: $0 <community|enterprise> <system_id> <system_secret>"
    exit 1
}

type="$1"
system_id="$2"
secret="$3"

if [ -z "$1" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
fi

if [ -z "$system_id" ] || [ -z "$secret" ]; then
    exit_error "Invalid system_id or secret"
fi

# Setup URLs
case "$type" in
    community)
        uci set ns-plug.config.type="community"
        uci set ns-plug.config.alerts_url="https://my.nethserver.com/api/machine/"
        uci set ns-plug.config.api_url="https://my.nethserver.com/api/"
        uci set ns-plug.config.inventory_url="https://my.nethserver.com/api/machine/inventories/store/"
        ;;
    enterprise)
        uci set ns-plug.config.type="enterprise"
        uci set ns-plug.config.alerts_url="https://my.nethesis.it/isa/"
        uci set ns-plug.config.api_url="https://my.nethesis.it/api/"
        uci set ns-plug.config.inventory_url="https://my.nethesis.it/isa/inventory/store/"
       ;;
   *)
       exit_error "Invalid type '$type'"
      ;;
esac

# Save config
uci set ns-plug.config.system_id="$system_id"
uci set ns-plug.config.secret="$secret"
uci commit ns-plug
# Register the machine by sending the inventory for the first time
send-inventory
send-heartbeat
